# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [devel, master]
  pull_request:
    branches: [devel, master]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::DT

      - name: Test coverage
        run: |
          tryCatch(
            expr = {
                x <- covr::package_coverage(
                  path=".",
                  clean = FALSE,
                  quiet = FALSE
                )
                print(x)
                covr::to_cobertura(x, filename = "coverage.xml")
                p <- round(covr::percent_coverage(x))
                cat(p, file = "coverage.txt", sep = "")
                covr::report(
                    x,
                    file = "coverage-report.html",
                    browse = FALSE
                )
            },
            error = function(e) {
              message("Errors generated during coverage analysis:")
              print(e)
              error_file <- list.files(path = "/tmp", pattern="*.fail$", recursive = T, full.names = T)[1]
              if (length(error_file) && file.exists(error_file)) {
                cat("__________FULL OUTPUT__________")
                writeLines(readLines(error_file))
              }
            },
            warning = function(w) {
                message("Warnings generated during coverage analysis:")
                print(w)
            }
          )
        shell: Rscript {0}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
